(function(c,a){"function"===typeof define&&define.amd?define([],a):"object"===typeof module&&module.exports?module.exports=a():c.pipwerks=a()})(this,function(){var c={UTILS:{},debug:{isActive:!0},SCORM:{version:null,handleCompletionStatus:!0,handleExitMode:!0,API:{handle:null,isFound:!1},connection:{isActive:!1},data:{completionStatus:null,exitStatus:null},debug:{}}};c.SCORM.isAvailable=function(){return!0};c.SCORM.API.find=function(a){for(var b=null,d=0,e=c.UTILS.trace,f=c.SCORM;!a.API&&!a.API_1484_11&&
a.parent&&a.parent!=a&&500>=d;)d++,a=a.parent;if(f.version)switch(f.version){case "2004":a.API_1484_11?b=a.API_1484_11:e("SCORM.API.find: SCORM version 2004 was specified by user, but API_1484_11 cannot be found.");break;case "1.2":a.API?b=a.API:e("SCORM.API.find: SCORM version 1.2 was specified by user, but API cannot be found.")}else a.API_1484_11?(f.version="2004",b=a.API_1484_11):a.API&&(f.version="1.2",b=a.API);b?(e("SCORM.API.find: API found. Version: "+f.version),e("API: "+b)):e("SCORM.API.find: Error finding API. \nFind attempts: "+
d+". \nFind attempt limit: 500");return b};c.SCORM.API.get=function(){var a=window,b=c.SCORM,d=b.API.find,e=c.UTILS.trace;var f=d(a);!f&&a.parent&&a.parent!=a&&(f=d(a.parent));!f&&a.top&&a.top.opener&&(f=d(a.top.opener));!f&&a.top&&a.top.opener&&a.top.opener.document&&(f=d(a.top.opener.document));f?b.API.isFound=!0:e("API.get failed: Can't find the API!");return f};c.SCORM.API.getHandle=function(){var a=c.SCORM.API;a.handle||a.isFound||(a.handle=a.get());return a.handle};c.SCORM.connection.initialize=
function(){var a=!1,b=c.SCORM;var d=c.UTILS.trace;var e=c.UTILS.StringToBoolean,f=b.debug;d("connection.initialize called.");if(b.connection.isActive)d("SCORM.connection.initialize aborted: Connection already active.");else{var g=b.API.getHandle();if(g){switch(b.version){case "1.2":a=e(g.LMSInitialize(""));break;case "2004":a=e(g.Initialize(""))}if(a)if(e=f.getCode(),null!==e&&0===e){if(b.connection.isActive=!0,b.handleCompletionStatus&&(d=b.status("get"))){switch(d){case "not attempted":b.status("set",
"incomplete");break;case "unknown":b.status("set","incomplete")}b.save()}}else a=!1,d("SCORM.connection.initialize failed. \nError code: "+e+" \nError info: "+f.getInfo(e));else e=f.getCode(),null!==e&&0!==e?d("SCORM.connection.initialize failed. \nError code: "+e+" \nError info: "+f.getInfo(e)):d("SCORM.connection.initialize failed: No response from server.")}else d("SCORM.connection.initialize failed: API is null.")}return a};c.SCORM.connection.terminate=function(){var a=!1,b=c.SCORM,d=b.data.exitStatus,
e=b.data.completionStatus,f=c.UTILS.trace,g=c.UTILS.StringToBoolean,h=b.debug;if(b.connection.isActive){var k=b.API.getHandle();if(k){if(b.handleExitMode&&!d)if("completed"!==e&&"passed"!==e)switch(b.version){case "1.2":b.set("cmi.core.exit","suspend");break;case "2004":b.set("cmi.exit","suspend")}else switch(b.version){case "1.2":b.set("cmi.core.exit","logout");break;case "2004":b.set("cmi.exit","normal")}if(a="1.2"===b.version?b.save():!0){switch(b.version){case "1.2":a=g(k.LMSFinish(""));break;
case "2004":a=g(k.Terminate(""))}a?b.connection.isActive=!1:(b=h.getCode(),f("SCORM.connection.terminate failed. \nError code: "+b+" \nError info: "+h.getInfo(b)))}}else f("SCORM.connection.terminate failed: API is null.")}else f("SCORM.connection.terminate aborted: Connection already terminated.");return a};c.SCORM.data.get=function(a){var b=null,d=c.SCORM,e=c.UTILS.trace,f=d.debug,g="SCORM.data.get('"+a+"') ";if(d.connection.isActive){var h=d.API.getHandle();if(h){switch(d.version){case "1.2":b=
h.LMSGetValue(a);break;case "2004":b=h.GetValue(a)}h=f.getCode();if(""!==b||0===h)switch(a){case "cmi.core.lesson_status":case "cmi.completion_status":d.data.completionStatus=b;break;case "cmi.core.exit":case "cmi.exit":d.data.exitStatus=b}else e(g+"failed. \nError code: "+h+"\nError info: "+f.getInfo(h))}else e(g+"failed: API is null.")}else e(g+"failed: API connection is inactive.");e(g+" value: "+b);return String(b)};c.SCORM.data.set=function(a,b){var d=!1,e=c.SCORM,f=c.UTILS.trace,g=c.UTILS.StringToBoolean,
h=e.debug,k="SCORM.data.set('"+a+"') ";if(e.connection.isActive){var l=e.API.getHandle();if(l){switch(e.version){case "1.2":d=g(l.LMSSetValue(a,b));break;case "2004":d=g(l.SetValue(a,b))}if(d){if("cmi.core.lesson_status"===a||"cmi.completion_status"===a)e.data.completionStatus=b}else a=h.getCode(),f(k+"failed. \nError code: "+a+". \nError info: "+h.getInfo(a))}else f(k+"failed: API is null.")}else f(k+"failed: API connection is inactive.");f(k+" value: "+b);return d};c.SCORM.data.save=function(){var a=
!1,b=c.SCORM,d=c.UTILS.trace,e=c.UTILS.StringToBoolean;if(b.connection.isActive){var f=b.API.getHandle();if(f)switch(b.version){case "1.2":a=e(f.LMSCommit(""));break;case "2004":a=e(f.Commit(""))}else d("SCORM.data.save failed: API is null.")}else d("SCORM.data.save failed: API connection is inactive.");return a};c.SCORM.status=function(a,b){var d=!1,e=c.SCORM,f=c.UTILS.trace,g="";if(null!==a){switch(e.version){case "1.2":g="cmi.core.lesson_status";break;case "2004":g="cmi.completion_status"}switch(a){case "get":d=
e.data.get(g);break;case "set":null!==b?d=e.data.set(g,b):(d=!1,f("SCORM.getStatus failed: status was not specified."));break;default:d=!1,f("SCORM.getStatus failed: no valid action was specified.")}}else f("SCORM.getStatus failed: action was not specified.");return d};c.SCORM.debug.getCode=function(){var a=c.SCORM,b=a.API.getHandle(),d=c.UTILS.trace,e=0;if(b)switch(a.version){case "1.2":e=parseInt(b.LMSGetLastError(),10);break;case "2004":e=parseInt(b.GetLastError(),10)}else d("SCORM.debug.getCode failed: API is null.");
return e};c.SCORM.debug.getInfo=function(a){var b=c.SCORM,d=b.API.getHandle(),e=c.UTILS.trace,f="";if(d)switch(b.version){case "1.2":f=d.LMSGetErrorString(a.toString());break;case "2004":f=d.GetErrorString(a.toString())}else e("SCORM.debug.getInfo failed: API is null.");return String(f)};c.SCORM.debug.getDiagnosticInfo=function(a){var b=c.SCORM,d=b.API.getHandle(),e=c.UTILS.trace,f="";if(d)switch(b.version){case "1.2":f=d.LMSGetDiagnostic(a);break;case "2004":f=d.GetDiagnostic(a)}else e("SCORM.debug.getDiagnosticInfo failed: API is null.");
return String(f)};c.SCORM.init=c.SCORM.connection.initialize;c.SCORM.get=c.SCORM.data.get;c.SCORM.set=c.SCORM.data.set;c.SCORM.save=c.SCORM.data.save;c.SCORM.quit=c.SCORM.connection.terminate;c.UTILS.StringToBoolean=function(a){switch(typeof a){case "object":case "string":return/(true|1)/i.test(a);case "number":return!!a;case "boolean":return a;case "undefined":return null;default:return!1}};c.UTILS.trace=function(a){c.debug.isActive&&window.console&&window.console.log&&window.console.log(a)};return c});